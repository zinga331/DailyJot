name: CI

on:
  pull_request:
    branches: [prd, stg, dev]
    types: [opened, reopened, synchronize, edited]
    paths-ignore: # Pushes that include only these changed files won't trigger actions
      - "**/README.md"
      - "**/.gitignore"
      - "**/doc/*"
env:
  tf_version: ">=1.4.5" # must match value in terraform/modules/app/main.tf

jobs:
  env:
    name: Set Env Vars
    runs-on: ubuntu-latest
    steps:
      - name: Get Current Timestamp
        id: date
        run: echo "timestamp=$(date +'%Y-%m-%d_%H-%M-%S')" >> $GITHUB_OUTPUT

      - name: Set up PRD Environment Variables
        if: ${{ github.base_ref == 'prd' }}
        # Replace the app_name with the project name
        run: |
          matrix='{
            "env":[
              {
                "app_name":"app-name",
                "tf_working_dir":"./terraform/prd",
                "aws_key_name":"byu_dept_fhtl_prd_key",
                "aws_secret_name":"byu_dept_fhtl_prd_secret",
                "image_tag":"${{ steps.date.outputs.timestamp }}"
              }
            ]
          }'
          echo matrix=`echo $matrix | jq -c .` >> $GITHUB_ENV

      - name: Set up STG Environment Variables
        if: ${{ github.base_ref == 'stg' || 'dev' }}
        # Replace the app_name with the project name
        run: |
          matrix='{
            "env":[
              {
                "app_name":"app-name",
                "tf_working_dir":"./terraform/stg",
                "aws_key_name":"byu_dept_fhtl_dev_key",
                "aws_secret_name":"byu_dept_fhtl_dev_secret",
                "image_tag":"${{ steps.date.outputs.timestamp }}"
              }
            ]
          }'
          echo matrix=`echo $matrix | jq -c .` >> $GITHUB_ENV

    outputs:
      matrix: ${{ env.matrix }}

  changes:
    name: Find File Changes
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}
    steps:
      # For pull requests it's not necessary to checkout the code
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            backend:
              - 'backend/**'
              - 'docker/**'
            frontend:
              - 'frontend/**'

  format:
    name: Terraform Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          sparse-checkout: |
            terraform

      - name: Check Terraform Formatting
        working-directory: "./terraform"
        run: terraform fmt -check -recursive

  docker:
    name: Docker Build
    needs: changes
    if: ${{ needs.changes.outputs.backend == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          sparse-checkout: |
            backend
            docker

      - name: Build the Docker image
        run: |
          docker build backend --file docker/Dockerfile

  react:
    name: React Build
    needs: changes
    if: ${{ needs.changes.outputs.frontend == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          sparse-checkout: |
            frontend

      - name: Build the React app
        working-directory: "frontend"
        run: |
          npm ci
          npm run build --if-present

  plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    needs: [env, format]
    strategy:
      matrix: ${{ fromJson(needs.env.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v3
        with:
          sparse-checkout: |
            terraform

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets[matrix.env.aws_key_name] }}
          aws-secret-access-key: ${{ secrets[matrix.env.aws_secret_name] }}
          aws-region: us-west-2

      - name: Terraform Setup
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.tf_version }}

      - name: Terraform Init
        working-directory: "${{ matrix.env.tf_working_dir }}"
        run: terraform init

      - name: Terraform Plan
        working-directory: "${{ matrix.env.tf_working_dir }}"
        run: terraform plan -var 'image_tag=${{ matrix.env.image_tag }}' -input=false -out=plan

      - name: Comment Terraform Plan
        uses: byu-oit/github-action-tf-plan-comment@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          working-directory: "${{ matrix.env.tf_working_dir }}"
          terraform-plan-file: plan
